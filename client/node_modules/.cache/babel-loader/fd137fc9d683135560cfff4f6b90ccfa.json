{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOAD, AUTH_ERROR } from \"./types\";\nexport const loadUser = () => async dispatch => {};\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.respose.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/manofworld/DevNet/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOAD","AUTH_ERROR","loadUser","dispatch","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","respose","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,UAJJ,QAKO,SALP;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB,CAE/C,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA6B,MAAMJ,QAAN,IAAkB;AACnE,QAAMK,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEjB,gBADD;AAELkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,OAAJ,CAAYH,IAAZ,CAAiBE,MAAhC;;AAEA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAInB,QAAQ,CAACN,QAAQ,CAACyB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDpB,IAAAA,QAAQ,CAAC;AACNY,MAAAA,IAAI,EAAEhB;AADA,KAAD,CAAR;AAGH;AACJ,CA3BM","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOAD,\n    AUTH_ERROR\n} from \"./types\";\n\nexport const loadUser = () => async dispatch => {\n\n}\n\nexport const register = ({name, email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, email, password});\n\n    try {\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        const errors = err.respose.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n           type: REGISTER_FAIL\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}